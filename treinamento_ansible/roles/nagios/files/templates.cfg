#-------------------------#
#--- Contact Templates ---#
#-------------------------#

#-- Generic contact

define contact{
        name                            generic-contact
        service_notification_period     24x7
        host_notification_period        24x7
        service_notification_options    w,u,c,r,f,s
        host_notification_options       d,u,r,f,s
        service_notification_commands   notify-service-by-email
        host_notification_commands      notify-host-by-email
        register                        0 
        }

#-----------------------#
#--- Hosts templates ---#
#-----------------------#

# Generic host definition template

define host{
        name                            generic-host
        notifications_enabled           1
        event_handler_enabled           1
        flap_detection_enabled          1
        process_perf_data               1
        retain_status_information       1 
        retain_nonstatus_information    1  
	    notification_period		        24x7
        register                        0
        }


# Linux host definition template

define host{
	name				    linux-server
	use				        generic-host
	check_period			24x7
	check_interval			5
	retry_interval			1
	max_check_attempts		10
    check_command           check-host-alive
	notification_period		workhours
	notification_interval	120
	notification_options	d,u,r
	contact_groups			admins
	register			    0
	}



# Windows host definition template

define host{
	name			        windows-server
	use			            generic-host
	check_period	    	24x7
	check_interval	    	5
	retry_interval	    	1
	max_check_attempts	    10
	check_command		    check-host-alive
	notification_period	    24x7
	notification_interval	30
	notification_options	d,r
	contact_groups		    admins
	hostgroups		        windows-servers 
	register		        0
	}


# We define a generic printer template that can be used for most printers we monitor

define host{
	name			        generic-printer
	use			            generic-host
	check_period		    24x7
	check_interval		    5
	retry_interval		    1
	max_check_attempts	    10
	check_command		    check-host-alive
	notification_period	    workhours
	notification_interval	30
	notification_options	d,r
	contact_groups		    admins
	register		        0
	}


# Define a template for switches that we can reuse
define host{
	name			        generic-switch
	use			        generic-host
	check_period		    24x7
	check_interval		    5
	retry_interval		    1
	max_check_attempts	    10
	check_command		    check-host-alive
	notification_period	    24x7
	notification_interval	30
	notification_options	d,r
	contact_groups		    admins
	register		        0
	}

#------------------------#
#--- Service template ---#
#------------------------#

# Generic service definition template - This is NOT a real service, just a template!

define service{
        name                            generic-service
        active_checks_enabled           1
        passive_checks_enabled          1
        parallelize_check               1
        obsess_over_service             1
        check_freshness                 0
        notifications_enabled           1
        event_handler_enabled           1
        flap_detection_enabled          1
        process_perf_data               1
        retain_status_information       1
        retain_nonstatus_information    1
        is_volatile                     0
        check_period                    24x7
        max_check_attempts              3
        check_interval                  10
        retry_interval                   2
        contact_groups                  admins
	    notification_options	    	w,u,c,r
        notification_interval           60
        notification_period             24x7
         register                       0 
        }


# Local service definition template - This is NOT a real service, just a template!

define service{
	    name				    local-service
	    use				        generic-service
        max_check_attempts      4
        check_interval          5
        retry_interval          1
        register                0
	}
